{"version":3,"sources":["route/index.js","App.js","reportWebVitals.js","reducers/login.reducer.js","reducers/index.js","store/index.js","index.js","../external \"THREE\"","../external \"Cesium\""],"names":["LoginPage","React","lazy","EditorPage","ScreenPage","TestPage","Layout","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","Routes","Suspense","fallback","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user","JSON","parse","initialState","globalReducers","combineReducers","login","action","type","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","module","exports","THREE","Cesium"],"mappings":"wQAGMA,EAAYC,IAAMC,MAAK,kBAAM,uDAE7BC,EAAaF,IAAMC,MAAK,kBAAM,8DAC9BE,EAAaH,IAAMC,MAAK,kBAAM,iCAC9BG,EAAWJ,IAAMC,MAAK,kBAAM,kCAC5BI,EAASL,IAAMC,MAAK,kBAAM,qEAG1BK,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACjB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OACb,SAAAC,GACI,OAAOC,aAAaC,QAAQ,QAAU,kBAACN,EAAcI,GAAY,kBAAC,IAAD,CAAUG,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEC,KAAMN,EAAMO,kBAiBvHC,EAbA,WACX,OACI,kBAAC,IAAMC,SAAP,CAAgBC,UAAQ,GACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASd,UAAW,SAACG,GAAD,OAAW,kBAACZ,EAAcY,MAC1D,kBAAC,IAAD,CAAOW,KAAK,UAAUd,UAAW,SAACG,GAAD,OAAW,kBAACT,EAAeS,MAC5D,kBAAC,IAAD,CAAOW,KAAK,UAAUd,UAAW,SAACG,GAAD,OAAW,kBAACR,EAAeQ,MAC5D,kBAAC,IAAD,CAAOW,KAAK,QAAQd,UAAW,SAACG,GAAD,OAAW,kBAACP,EAAaO,MACxD,kBAAC,EAAD,CAAcW,KAAK,IAAId,UAAW,SAACG,GAAD,OAAW,kBAACN,EAAWM,SCrBpDY,E,kDACjB,WAAYZ,GAAQ,uCACVA,G,qDAGN,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,W,GAPiBJ,aCOlBiB,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCPhBQ,EAAOC,KAAKC,MAAMvB,aAAaC,QAAQ,SACrCuB,EAAeH,EAAO,CACxBA,QACA,GCEWI,EAHQC,YAAgB,CACnCC,MDCW,WAAmC,IAAlCvB,EAAiC,uDAAzBoB,EAAcI,EAAW,uCAC7C,OAAQA,EAAOC,MACX,IAAK,QACD,MAAO,CACHR,KAAMO,EAAOP,MAErB,QACI,OAAOjB,MEPb0B,EAAmBC,yBACZC,EAAQC,YACjBR,EACAS,YACIC,IACAL,I,QCDRM,IAAStC,OACL,kBAAC,IAAD,CAAUkC,MAAOA,GACb,kBAAC,EAAD,OAEJK,SAASC,eAAe,SAM5B1B,K,iBClBA2B,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,S","file":"static/js/main.33f645cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nconst LoginPage = React.lazy(() => import('@/views/LoginPage'));\r\n//const HomePage = React.lazy(() => import('@/views/HomePage'));\r\nconst EditorPage = React.lazy(() => import('@/views/EditorPage'));\r\nconst ScreenPage = React.lazy(() => import('@/views/ScreenPage'));\r\nconst TestPage = React.lazy(() => import('@/views/TestPage'));\r\nconst Layout = React.lazy(() => import('@/components/Layout/MainLayout'));\r\n//const NoMatch = React.lazy(() => import('@/views/404'));\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={\r\n        props => {\r\n            return localStorage.getItem('user') ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n    } />\r\n)\r\nconst Routes = () => {\r\n    return (\r\n        <React.Suspense fallback>\r\n            <Switch>\r\n                <Route path=\"/login\" component={(props) => <LoginPage {...props} />} />\r\n                <Route path=\"/editor\" component={(props) => <EditorPage {...props} />} />\r\n                <Route path=\"/screen\" component={(props) => <ScreenPage {...props} />} />\r\n                <Route path=\"/test\" component={(props) => <TestPage {...props} />} />\r\n                <PrivateRoute path=\"/\" component={(props) => <Layout {...props} />} />\r\n            </Switch>\r\n        </React.Suspense>\r\n    );\r\n}\r\nexport default Routes;\r\n","import './App.less';\nimport React, { Component } from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Routes from './route';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Router>\n                <Routes />\n            </Router>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","let user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? {\r\n    user\r\n} : {};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"login\":\r\n            return {\r\n                user: action.user\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport login from './login.reducer';\r\nconst globalReducers = combineReducers({\r\n    login\r\n});\r\nexport default globalReducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport globalReducers from '../reducers';\r\nconst loggerMiddleware = createLogger();\r\nexport const store = createStore(\r\n    globalReducers,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = THREE;","module.exports = Cesium;"],"sourceRoot":""}