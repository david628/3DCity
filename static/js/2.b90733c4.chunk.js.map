{"version":3,"sources":["components/UI/ColorPicker/index.js","views/EditorPage/SiderMenu/index.js","views/EditorPage/MapPanel/index.js","views/EditorPage/LineLayerPanel/index.js","views/EditorPage/BuildingLayerPanel/index.js","views/EditorPage/PolygonLayerPanel/index.js","views/EditorPage/LabelLayerPanel/index.js","views/EditorPage/PointLayerPanel/index.js","views/EditorPage/ScanLayerPanel/index.js","components/UI/MEditor/index.js","views/EditorPage/DataSourcePanel/index.js","components/Engine/core/MapSelector/index.js","components/UI/MapSelector/index.js","views/EditorPage/index.js","components/UI/UploadImage/index.js","views/EditorPage lazy /^/.*Panel/config$/ groupOptions: {} namespace object"],"names":["ColorPicker","SiderMenu","props","handleClick","param","item","key","Date","getTime","name","title","isLeaf","onChange","data","state","slice","unshift","setState","selectedKeys","handleDel","e","preventDefault","onDel","defaultSelectedKeys","defaultData","menu","onClick","Item","icon","getIcon","getTitle","nextProps","this","sprefix","className","overlay","trigger","overlayClassName","size","showIcon","treeData","type","Component","defaultProps","MapPanel","click","handleAdd","isModalVisible","handleSumbit","menus","mapName","mapUrl","label","img","url","handleCancel","handleChange","target","value","config","defaultConfig","newConfig","color","menusRender","map","index","cls","push","join","src","alt","defaultValue","wrapClassName","visible","centered","onOk","onCancel","style","padding","LineLayerPanel","Object","assign","opacity","direction","effect","min","max","step","checked","BuildingLayerPanel","height","topOpacity","sideOpacity","topColor","sideColor","topImg","sideImg","PolygonLayerPanel","outlineColor","outlineOpacity","LabelLayerPanel","fontColor","fontSize","lineColor","lineOpacity","PointLayerPanel","ScanLayerPanel","speed","MEditor","editor","getValue","language","theme","minimap","enabled","automaticLayout","monaco","create","editorDom","setValue","_subscription","onDidChangeModelContent","nextState","prevProps","destoryMonaco","v","dispose","model","getModel","ref","DataSourcePanel","file","files","undefined","reader","FileReader","readAsText","onload","content","JSON","parse","result","path","getJSON","fetch","then","rs","json","stringify","width","position","border","borderRadius","marginBottom","fileInput","accept","top","left","cursor","MapSelector","prix","template","dx","dy","center","zoom","placeholder","el","get","document","getElementById","innerHTML","hidden","querySelector","bind","addEventListener","latLng","lat","lng","showMap","split","isNaN","searchTools","window","L","Control","Search","jsonParam","propertyName","propertyLoc","textPlaceholder","marker","autoCollapse","autoType","minLength","tipAutoSubmit","moveToLocation","flyTo","renderRect","addControl","leaflet","remove","addTo","rect","point","latLngToContainerPoint","start","x","y","end","rectangle","containerPointToLatLng","enableEdit","dialog","display","createElement","body","appendChild","inner","onclick","contains","hide","show","editable","setView","tileLayer","initSearchTools","fitBounds","getBounds","setMarker","on","updateLocal","northEast","_northEast","southWest","_southWest","nePoint","swPoint","centerPoint","mapSelector","dom","EditorPage","loaderMap","a","view","n","LayerClass","default","add","handleClickSiderMenu","handleSelectSiderMenu","select","handleButton","goToLonLat","handleSetStyle","layer","entities","currentLayers","resource_id","setStyle","handleSetMap","setMap","handlePublish","handleSetDataSource","setData","dataSource","handleTabChange","sd","i","length","__type","clear","j","splice","destory","obj","prototype","toString","call","deepCopy","cType","noSelect","selectLayer","showPanel","addLayer","loadDataByLayer","loadDataSource","lonLat","camera","callback","cors","stylePanel","TabPane","tab","onSelect","right","zIndex","renderSettingPanel","UploadImage","handleUploadFiles","ps","handleUploadFile","Promise","all","handleInputChange","imageUrl","handleInputKeyPress","nativeEvent","which","blur","handleInputBlur","readAsDataURL","basePath","fileTitle","disabled","viewBox","focusable","data-icon","fill","aria-hidden","d","onKeyPress","onBlur","backgroundImage","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","id","t","keys","module","exports"],"mappings":"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","file":"static/js/2.b90733c4.chunk.js","sourcesContent":["import { ColorPicker } from '@/dw-rui/';\r\nimport './index.less';\r\nexport default ColorPicker;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Tree, Dropdown, Menu } from 'antd';\r\nimport {\r\n    //PlusOutlined,\r\n    //DeleteOutlined,\r\n    GlobalOutlined,\r\n    CodeSandboxOutlined,\r\n    BranchesOutlined,\r\n    CodepenOutlined,\r\n    EnvironmentOutlined,\r\n    IdcardOutlined,\r\n    PlusOutlined,\r\n    CopyOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\nimport './index.less';\r\n\r\nexport default class SiderMenu extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let selectedKeys = props.selectedKeys || props.defaultSelectedKeys;\r\n        let data = props.data || props.defaultData;\r\n        this.state = {\r\n            selectedKeys,\r\n            data\r\n        };\r\n        this.menu = (\r\n            <Menu onClick={this.handleClick}>\r\n                {/* <Menu.Item key=\"Map\" icon={SiderMenu.getIcon('Map')}>Map</Menu.Item> */}\r\n                <Menu.Item key=\"BuildingLayer\" icon={SiderMenu.getIcon('BuildingLayer')}>{SiderMenu.getTitle('BuildingLayer')}</Menu.Item>\r\n                <Menu.Item key=\"LineLayer\" icon={SiderMenu.getIcon('LineLayer')}>{SiderMenu.getTitle('LineLayer')}</Menu.Item>\r\n                <Menu.Item key=\"PolygonLayer\" icon={SiderMenu.getIcon('PolygonLayer')}>{SiderMenu.getTitle('PolygonLayer')}</Menu.Item>\r\n                <Menu.Item key=\"PointLayer\" icon={SiderMenu.getIcon('PointLayer')}>{SiderMenu.getTitle('PointLayer')}</Menu.Item>\r\n                <Menu.Item key=\"LabelLayer\" icon={SiderMenu.getIcon('LabelLayer')}>{SiderMenu.getTitle('LabelLayer')}</Menu.Item>\r\n                <Menu.Item key=\"ScanLayer\" icon={SiderMenu.getIcon('ScanLayer')}>{SiderMenu.getTitle('ScanLayer')}</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('selectedKeys' in nextProps) {\r\n            if(nextProps.selectedKeys !== this.state.selectedKeys) {\r\n                this.setState({\r\n                    selectedKeys: nextProps.selectedKeys\r\n                });\r\n            }\r\n        }\r\n        if('data' in nextProps) {\r\n            if(nextProps.data !== this.state.data) {\r\n                this.setState({\r\n                    data: nextProps.data\r\n                });\r\n            }\r\n        }\r\n    }\r\n    static getTitle(type) {\r\n        if(type === 'Map') {\r\n            return 'Map';\r\n        } else if(type === 'BuildingLayer') {\r\n            return 'Building层';\r\n        } else if(type === 'LineLayer') {\r\n            return '轨迹线层';\r\n        } else if(type === 'PolygonLayer') {\r\n            return 'Polygon层';\r\n        } else if(type === 'PointLayer') {\r\n            return '粒子层';\r\n        } else if(type === 'LabelLayer') {\r\n            return '文字标签层';\r\n        } else if(type === 'ScanLayer') {\r\n            return 'Scan层';\r\n        }\r\n    }\r\n    static getIcon(type) {\r\n        if(type === 'Map') {\r\n            return <GlobalOutlined />;\r\n        } else if(type === 'BuildingLayer') {\r\n            return <CodeSandboxOutlined />;\r\n        } else if(type === 'LineLayer') {\r\n            return <BranchesOutlined />;\r\n        } else if(type === 'PolygonLayer') {\r\n            return <CodepenOutlined />;\r\n        } else if(type === 'PointLayer') {\r\n            return <EnvironmentOutlined />;\r\n        } else if(type === 'LabelLayer') {\r\n            return <IdcardOutlined />;\r\n        } else if(type === 'ScanLayer') {\r\n            return <GlobalOutlined />;\r\n        }\r\n    }\r\n    handleClick = param => {\r\n        const item = {\r\n            key: new Date().getTime(),\r\n            name: param.key,\r\n            title: param.key,\r\n            //icon: SiderMenu.getIcon(param.key),\r\n            isLeaf: false\r\n        };\r\n        if(this.props.onChange) {\r\n            this.props.onChange(item);\r\n        } else {\r\n            const data = this.state.data.slice();\r\n            data.unshift(item);\r\n            this.setState({\r\n                data,\r\n                selectedKeys: [item.key]\r\n            });\r\n        }\r\n    }\r\n    // onExpand = expandedKeys => {\r\n    //     this.setState({\r\n    //         expandedKeys,\r\n    //         //autoExpandParent: false,\r\n    //     });\r\n    // };\r\n    handleDel = e => {\r\n        e.preventDefault();\r\n        if(this.props.onDel) {\r\n            this.props.onDel(this.state.selectedKeys);\r\n        }\r\n    };\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        return (\r\n            <div className={ `${ sprefix }-editor-sider-main` }>\r\n                <div className={ `${ sprefix }-editor-sider-header` }>\r\n                     <div className={ `${ sprefix }-editor-sider-label` }>图层</div>\r\n                     <div className={ `${ sprefix }-editor-sider-tools` }>\r\n                        <span>\r\n                            <Dropdown\r\n                                overlay={ this.menu }\r\n                                trigger={['click']}\r\n                                overlayClassName={ `cls-custom-dropdown` }\r\n                            >\r\n                                <Button icon={ <PlusOutlined/> } title=\"添加\" size='small'/>\r\n                            </Dropdown>\r\n                        </span>\r\n                        <span>\r\n                            <Button icon={ <DeleteOutlined/> } size='small' title=\"删除\" onClick={ this.handleDel }/>\r\n                        </span>\r\n                     </div>\r\n                </div>   \r\n                <div className={  `${ sprefix }-editor-sider-content` }>\r\n                    <Tree\r\n                        { ...this.props }\r\n                        showIcon\r\n                        //onExpand={ this.onExpand }\r\n                        selectedKeys={ this.state.selectedKeys }\r\n                        treeData={ this.state.data }\r\n                    />\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n    Modal,\r\n    Input\r\n} from 'antd';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class MapPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        this.state = {\r\n            isModalVisible: false,\r\n            mapName: '',\r\n            mapUrl: '',\r\n            config,\r\n            menus: [\r\n                {\r\n                    label: 'ArcGIS',\r\n                    img: 'images/map/stamenToner.png',\r\n                    url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'\r\n                }, {\r\n                    label: '高德地图',\r\n                    img: 'images/map/esriWorldStreetMap.png',\r\n                    url: 'http://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}'\r\n                }, {\r\n                    label: 'OSM',\r\n                    img: 'images/map/openStreetMap.png',\r\n                    url: 'http://{a}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                }\r\n                // , {\r\n                //     label: '谷歌地图-路线图',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/ImageryProviders/bingRoads.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=m&x={x}&y={y}&z={z}'\r\n                // }, {\r\n                //     label: '谷歌地图-卫星图',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/ImageryProviders/bingAerial.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=s&x={x}&y={y}&z={z}'\r\n                // }, {\r\n                //     label: '谷歌地图-标注卫星图',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/ImageryProviders/bingAerialLabels.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=y&x={x}&y={y}&z={z}'\r\n                // }, {\r\n                //     label: '谷歌地图-地形图',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/TerrainProviders/CesiumWorldTerrain.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=t&x={x}&y={y}&z={z}'\r\n                // }, {\r\n                //     label: '谷歌地图-标签的地形图',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/ImageryProviders/esriWorldImagery.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=p&x={x}&y={y}&z={z}'\r\n                // }, {\r\n                //     label: '谷歌地图-标注层',\r\n                //     img: 'https://sandcastle.cesium.com/CesiumUnminified/Widgets/Images/ImageryProviders/stamenToner.png',\r\n                //     url: 'https://mt{0,1,2,3}.google.cn/vt/lyrs=h&x={x}&y={y}&z={z}'\r\n                // }\r\n            ]\r\n            // config: {\r\n            //     url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'\r\n            // }\r\n        };\r\n        // let selectedKeys = props.selectedKeys || props.defaultSelectedKeys;\r\n        // let data = props.data || props.defaultData;\r\n        // this.state = {\r\n        //     selectedKeys,\r\n        //     data\r\n        // };\r\n        // CityBuilder 可支持谷歌 XYZ 瓦片编码的底图服务，下表是常用地图的在线地图服务：\r\n\r\n        // 地图平台\t坐标系-中国区\t地图类型\tURL\r\n        // 谷歌地图\tGCJ02\t街道\thttp://mt{0,1,2,3}.google.cn/vt/lyrs=m&x={x}&y={y}&z={z}\r\n        // 谷歌地图\tWGS84\t卫星\thttp://mt{0,1,2,3}.google.cn/vt/lyrs=s&hl=zh-CN&gl=cn&x={x}&y={y}&z={z}\r\n        // 地形\thttp://mt{0,1,2,3}.google.cn/vt/lyrs=t&hl=zh-CN&gl=cn&x={x}&y={y}&z={z}\r\n        // OpenStreetMap\tWGS84\t道路\thttp://{a,b,c}.tile.openstreetmap.org/{z}/{x}/{y}.png\r\n        // 高德地图\tGCJ02\t卫星\thttp://webst0{1,2,3,4}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}\r\n        // 街道\thttp://webst0{1,2,3,4}.is.autonavi.com/appmaptile?style=7&x={x}&y={y}&z={z}\r\n        // 标注\thttp://webst0{1,2,3,4}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}\r\n        // 天地图\tGCJ02\t地形\thttp://t{1,2,3,4}.tianditu.gov.cn/DataServer?T=ter_w&x={x}&y={y}&l={z}\r\n        // GeoQ(捷泰天域)\tGCJ02\t街道\thttps://map.geoq.cn/arcgis/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}\r\n        // 说明\r\n        // {0,1,2,3}代表了url的subDomain,在请求时会随机的在url中使用mt0、mt1、mt2、mt3。{z}代表zoom，即缩放级别，{x}代表列号，{y}代表行号。\r\n        // 在谷歌地图中 lyrs 的值代表地图类型，具体意义如下：\r\n        // m：路线图\r\n        // t：地形图\r\n        // p：带标签的地形图\r\n        // s：卫星图\r\n        // y：带标注的卫星图\r\n        // h：标注层（路名、地名等）\r\n        // 在高德地图中 style 的值代表地图类型，具体意义如下：\r\n        // style=6 卫星图\r\n        // style=7 街道图\r\n        // style=8 标注层\r\n        // GeoQ 官网有公开的多个基于 ArcGIS 的地图服务,均可使用,详见https://map.geoq.cn/arcgis/rest/services\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleClick = item => {\r\n        return e => {\r\n            e.preventDefault();\r\n            this.click(item);\r\n        }\r\n    }\r\n    click(item) {\r\n        const { config } = this.state;\r\n        const newConfig = {\r\n            ...config,\r\n            url: item.url,\r\n            color: item.color\r\n        };\r\n        this.setState({\r\n            config: newConfig\r\n        });\r\n        if(this.props.onChange) {\r\n            this.props.onChange(newConfig);\r\n        }\r\n    }\r\n    handleAdd = e => {\r\n        const { isModalVisible } = this.state;\r\n        this.setState({\r\n            isModalVisible: !isModalVisible\r\n        });\r\n    }\r\n    handleSumbit = e => {\r\n        const { menus, mapName, mapUrl } = this.state;\r\n        if(mapName === '' || mapUrl === '') {\r\n            return;\r\n        }\r\n        const item = {\r\n            name: mapName,\r\n            label: mapName,\r\n            img: '/images/map/ellipsoid.png',\r\n            url: mapUrl\r\n        };\r\n        menus.unshift(item);\r\n        this.setState({\r\n            isModalVisible: false,\r\n            menus\r\n        });\r\n    }\r\n    handleCancel = e => {\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { menus, isModalVisible, config, mapName, mapUrl } = this.state;\r\n        const menusRender = menus.map((item, index) => {\r\n            let cls = [`${sprefix}-map-panel-item`];\r\n            if(config.url === item.url) {\r\n                cls.push(`${sprefix}-map-panel-item-active`);\r\n            }\r\n            return (\r\n                <div\r\n                    key={index}\r\n                    className={cls.join(' ')}\r\n                    onClick={this.handleClick(item)}\r\n                >\r\n                    <div className={`${sprefix}-map-panel-card`}>\r\n                        <img src={item.img} alt={\"Loading...\"}/>\r\n                    </div>\r\n                    <div className={`${sprefix}-map-panel-label`}>{item.label}</div>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <div className={ `${ sprefix }-map-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>地图底图</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-map-panel-list`}>\r\n                            <div className={ `${ sprefix }-map-panel-item` } onClick={ this.handleAdd }>\r\n                                <div className={ `${ sprefix }-map-panel-card ${ sprefix }-map-panel-card-add` }>+</div>\r\n                                <div className={ `${ sprefix }-map-panel-label` }>自定义</div>\r\n                            </div>\r\n                            { menusRender }\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>滤镜颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker defaultValue={ config.color } onChange={ (value, param) => {\r\n                                    this.click({\r\n                                        url: config.url,\r\n                                        color: param.value\r\n                                    });\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    wrapClassName={ `${ sprefix }-editor-dialog` }\r\n                    title=\"添加第三方底图\"\r\n                    visible={ isModalVisible }\r\n                    centered\r\n                    onOk={ this.handleSumbit }\r\n                    onCancel={ this.handleCancel }\r\n                >\r\n                    <div style={{\r\n                        padding: '0 20px'\r\n                    }}>\r\n                        <div className={ `${ sprefix }-form` }>\r\n                            <div className={ `${ sprefix }-form-label-group` }>\r\n                                <span className={ `${ sprefix }-form-label` }>底图名称</span>\r\n                                <div className={ `${ sprefix }-form-input` }>\r\n                                    <Input name=\"mapName\" value={ mapName } onChange={ this.handleChange } />\r\n                                </div>\r\n                            </div>\r\n                            <div className={ `${ sprefix }-form-label-group` }>\r\n                                <span className={ `${ sprefix }-form-label` }>底图URL</span>\r\n                                <div className={ `${ sprefix }-form-input` }>\r\n                                    <Input name=\"mapUrl\" value={ mapUrl } onChange={ this.handleChange } />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    InputNumber,\r\n    Slider,\r\n    Switch\r\n} from 'antd';\r\nimport UploadImage from '@/components/UI/UploadImage';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class LineLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            color: '#ffc627',\r\n            img: '',\r\n            opacity: 1.0,\r\n            direction: true,\r\n            effect: true\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>贴图</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <UploadImage value={ config.img } onChange={ this.handleChange('img') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.color } onChange={ this.handleChange('color') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.opacity } onChange={ this.handleChange('opacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>流动方向</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Switch checked={ config.direction } onChange={ this.handleChange('direction') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>特效</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Switch checked={ config.effect } onChange={ this.handleChange('effect') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Input,\r\n    InputNumber,\r\n    Slider,\r\n    Switch\r\n} from 'antd';\r\nimport UploadImage from '@/components/UI/UploadImage';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class BuildingLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            height: 100,\r\n            topOpacity: 1.0,\r\n            sideOpacity: 1.0,\r\n            topColor: '#4d7384',\r\n            sideColor: '#66a3ee',\r\n            effect: false\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>顶贴图</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <UploadImage value={ config.topImg } onChange={ this.handleChange('topImg') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>顶颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.topColor } onChange={ this.handleChange('topColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>顶透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.topOpacity } onChange={ this.handleChange('topOpacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>边贴图</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <UploadImage value={ config.sideImg } onChange={ this.handleChange('sideImg') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>边颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.sideColor } onChange={ this.handleChange('sideColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>边透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.sideOpacity } onChange={ this.handleChange('sideOpacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>拉伸高度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 999999 } step={ 1 } value={ config.height } onChange={ this.handleChange('height') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>特效</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Switch checked={ config.effect } onChange={ this.handleChange('effect') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    InputNumber,\r\n    Slider,\r\n    Switch\r\n} from 'antd';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class PolygonLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            height: 100,\r\n            opacity: .5,\r\n            color: '#DD3217',\r\n            outlineColor: '#ffa108',\r\n            outlineOpacity: 1.0,\r\n            effect: false\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.color } onChange={ this.handleChange('color') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.opacity } onChange={ this.handleChange('opacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>边框颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.outlineColor } onChange={ this.handleChange('outlineColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>边框透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.outlineOpacity } onChange={ this.handleChange('outlineOpacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>高度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 999999 } step={ 1 } value={ config.height } onChange={ this.handleChange('height') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>特效</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Switch checked={ config.effect } onChange={ this.handleChange('effect') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Input,\r\n    InputNumber,\r\n    Slider,\r\n    Switch\r\n} from 'antd';\r\n//import UploadImage from '@/components/UI/UploadImage';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class LabelLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            fontColor: \"#ffffff\",\r\n            fontSize: 12,\r\n            color: 'rgba(10,18,51,0.8)',\r\n            opacity: 1.0,\r\n            lineColor: '#ffffff',\r\n            lineOpacity: 1.0\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n        \r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.color } onChange={ this.handleChange('color') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.opacity } onChange={ this.handleChange('opacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>字体颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.fontColor } onChange={ this.handleChange('fontColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>字体大小</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 999999 } step={ 1 } value={ config.fontSize } onChange={ this.handleChange('fontSize') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>线颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.lineColor } onChange={ this.handleChange('lineColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>线透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.lineOpacity } onChange={ this.handleChange('lineOpacity') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    InputNumber,\r\n    Slider\r\n} from 'antd';\r\nimport UploadImage from '@/components/UI/UploadImage';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class PointLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            img: 'images/point/1.png',\r\n            color: '#00ff00',\r\n            opacity: 1.0,\r\n            size: 300,\r\n            lineColor: '#ffffff',\r\n            lineOpacity: 1.0\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n        \r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>粒子贴图</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <UploadImage value={ config.img } onChange={ this.handleChange('img') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.color } onChange={ this.handleChange('color') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.opacity } onChange={ this.handleChange('opacity') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>大小</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 999999 } step={ 1 } value={ config.size } onChange={ this.handleChange('size') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>线颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.lineColor } onChange={ this.handleChange('lineColor') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>线透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.01 } value={ config.lineOpacity } onChange={ this.handleChange('lineOpacity') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Input,\r\n    InputNumber,\r\n    Slider,\r\n    Switch\r\n} from 'antd';\r\nimport ColorPicker from '@/components/UI/ColorPicker';\r\nimport './index.less';\r\n\r\nexport default class ScanLayerPanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let config = props.config || props.defaultConfig;\r\n        config = Object.assign({\r\n            height: 0,\r\n            color: \"#FF9400\",\r\n            opacity: 1.0,\r\n            speed: 0.01\r\n        }, config);\r\n        this.state = {\r\n            config\r\n        };\r\n        \r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('config' in nextProps) {\r\n            if(nextProps.config !== this.state.config) {\r\n                this.setState({\r\n                    config: nextProps.config\r\n                });\r\n            }\r\n        }\r\n    }\r\n    handleChange = (name) => {\r\n        return (e, param) => {\r\n            if(this.props.onChange) {\r\n                this.props.onChange(e, param, name);\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const { config } = this.state;\r\n        return (\r\n            <div className={ `${ sprefix }-polygon-panel` }>\r\n                <div className={ `${ sprefix }-editor-box` }>\r\n                    <div className={ `${ sprefix }-editor-box-header` }>基本信息</div>\r\n                    <div className={ `${ sprefix }-editor-box-content` }>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>颜色</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <ColorPicker value={ config.color } onChange={ this.handleChange('color') } />\r\n                            </div>\r\n                        </div>\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>透明度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <Slider min={ 0 } max={ 1 } step={ 0.1 } value={ config.opacity } onChange={ this.handleChange('opacity') } />\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>高度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 999999 } step={ 1 } value={ config.height } onChange={ this.handleChange('height') } />\r\n                            </div>\r\n                        </div> */}\r\n                        <div className={ `${ sprefix }-editor-label-group` }>\r\n                            <span className={ `${ sprefix }-editor-label` }>速度</span>\r\n                            <div className={ `${ sprefix }-editor-input` }>\r\n                                <InputNumber min={ 0 } max={ 1 } step={ 0.01 } value={ config.speed } onChange={ this.handleChange('speed') } />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\r\nimport './index.less';\r\n\r\nexport default class MEditor extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls',\r\n        onChange: () => {}\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.param = {\r\n            //value: JSON.stringify(data, null, 4),\r\n            language: 'json',\r\n            theme: 'vs-dark',\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            automaticLayout: true\r\n        };\r\n        let value = props.defaultValue || '';\r\n        if('value' in props) {\r\n            value = props.value || '';\r\n        }\r\n        let param = props.param || {};\r\n        this.param = {\r\n            ...this.param,\r\n            ...param\r\n        };\r\n        this.state = {\r\n            value\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(!this.editor) {\r\n            this.editor = monaco.editor.create(this.editorDom, this.param);\r\n            this.setValue(this.state.value);\r\n            //this._subscription = this.editor.onDidBlurEditorText(this.handChange);\r\n            this._subscription = this.editor.onDidChangeModelContent(this.handleChange);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('value' in nextProps) {\r\n            if(nextProps.value !== this.state.value) {\r\n                this.setState({\r\n                    value: nextProps.value\r\n                });\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let value = nextProps.defaultValue || '';\r\n        if('value' in nextProps) {\r\n            value = nextProps.value || '';\r\n        }\r\n        if(value === this.state.value) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        this.setValue(this.state.value);\r\n    }\r\n    componentWillUnmount() {\r\n        this.destoryMonaco();\r\n    }\r\n    handleChange = (name) => {\r\n        const value = this.editor.getValue();\r\n        if(this.props.onChange) {\r\n            this.props.onChange(value, { ...this.props, value });\r\n        }\r\n    }\r\n    setValue(v) {\r\n        if(this.editor) {\r\n            this.editor.setValue(v);\r\n        }\r\n    }\r\n    destoryMonaco() {\r\n        if(this.editor) {\r\n            this.editor.dispose();\r\n            const model = this.editor.getModel();\r\n            if(model) {\r\n                model.dispose();\r\n            }\r\n        }\r\n        if(this._subscription) {\r\n            this._subscription.dispose();\r\n        }\r\n    }\r\n    render() {\r\n        const { sprefix, style } = this.props;\r\n        return (\r\n            <div className={ `${ sprefix }-editor-wrap` }>\r\n                <div className={ `${ sprefix }-editor` } ref={ ref => this.editorDom = ref } style={ style }></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MEditor from '@/components/UI/MEditor';\r\n\r\nexport default class DataSourcePanel extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let value = props.value || props.defaultValue;\r\n        this.state = {\r\n            value,\r\n            path: ''\r\n        };\r\n        this.getJSON(value);\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('value' in nextProps) {\r\n            if(nextProps.value !== this.state.value) {\r\n                this.getJSON(nextProps.value);\r\n            }\r\n        }\r\n    }\r\n    getJSON(value) {\r\n        if(value === undefined || value === null) {\r\n            value = '';\r\n        }\r\n        if(typeof value === 'string') {\r\n            let path = value;\r\n            if(path !== this.state.path) {\r\n                fetch(path).then(rs => {\r\n                    return rs.json();\r\n                }).then(rs => {\r\n                    this.setState({\r\n                        value: rs,\r\n                        path\r\n                    });\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                value,\r\n                path: ''\r\n            });\r\n        }\r\n    }\r\n    onChange(value, e) {\r\n        if(!('value' in this.props)) {\r\n            this.setState({\r\n                value\r\n            });\r\n        }\r\n        if(this.props.onChange) {\r\n            this.props.onChange(value, { ...this.props, value });\r\n        }\r\n    }\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if(file !== undefined) {\r\n            const reader = new FileReader();\r\n            reader.readAsText(file);\r\n            reader.onload = e => {\r\n                let content = JSON.parse(e.target.result);\r\n                this.setState({\r\n                    path: file.name,\r\n                    value: content\r\n                });\r\n                if(this.props.onChange) {\r\n                    this.props.onChange(content, { ...this.props, value: content });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleClick = e => {\r\n\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        const cls = [`${ sprefix }-image-wrap`];\r\n        let content;\r\n        if(this.state.value !== 'string') {\r\n            content = JSON.stringify(this.state.value, null, 2);\r\n        }\r\n        return (\r\n            <div style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'relative',\r\n                padding: '10px'\r\n            }}>\r\n                <div style={{\r\n                    position: 'relative',\r\n                    border: '1px solid #000',\r\n                    borderRadius: '2px',\r\n                    marginBottom: '10px'\r\n                }}>\r\n                    <div title=\"\" style={{\r\n                        padding: '4px 15px'\r\n                    }}>\r\n                        <span style={{\r\n                            padding: '10px'\r\n                        }}>\r\n                            { this.state.path }\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        ref={ ref => this.fileInput = ref }\r\n                        type=\"file\"\r\n                        className={ `${ sprefix }-image-input` }\r\n                        accept=\"application/json\"\r\n                        onChange={ this.handleChange }\r\n                        style={{\r\n                            opacity: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            cursor: 'pointer'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={{\r\n                    width: '100%',\r\n                    height: '600px'\r\n                }}>\r\n                    <MEditor value={ content } onChange={ (value, param) => {\r\n                        if(this.props.onChange) {\r\n                            this.props.onChange(value, { ...this.props, value });\r\n                        }\r\n                    } }/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './index.less';\r\n\r\nexport default class MapSelector {\r\n    constructor(props) {\r\n        this.prix = 'dwrui';\r\n        this.template = `\r\n            <input class=\"${ this.prix }-mapSelector-hidden\" type=\"hidden\"/>\r\n            <div class=\"${ this.prix }-mapSelector\">\r\n                <span class=\"${ this.prix }-mapSelector-inner\">\r\n                    <i class=\"${ this.prix }-icon\"></i><span class=\"${ this.prix }-mapSelector-text\">选择自定义城市</span>\r\n                </span>\r\n            </div>\r\n        `;\r\n        this.width = 1000;\r\n        this.height = 1000;\r\n        this.dx = 80;\r\n        this.dy = 160;\r\n        //this.center = [30.259, 120.131];\r\n        this.center = [22.496991, 113.924008];\r\n        this.zoom = 13;\r\n        this.url = 'https://nominatim.openstreetmap.org/search?format=json&q={s}';\r\n        this.placeholder = '请输入地点';\r\n        Object.assign(this, props);\r\n        this.el = this.el.get ? this.el.get(0) : (typeof this.el === 'string' ? document.getElementById(this.el) : this.el);\r\n        this.el.innerHTML = this.template;\r\n        this.hidden = this.el.querySelector(`.${ this.prix }-mapSelector-hidden`);\r\n        this.hidden.name = this.name;\r\n        // const $el = $(this.el);\r\n        // this.wrap = this.el.querySelector(`.${ this.prix }-mapSelector`);\r\n        // $el.closest(`.hwvdate-setting-content`).append($(this.wrap));\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.el.addEventListener('click', this.handleClick, false);\r\n        // $el.closest('.hwvdata-form-group').hide();\r\n        if(this.value === '' || this.value === undefined || this.value === null) {\r\n            this.latLng = {\r\n                lat: this.center[0],\r\n                lng: this.center[1]\r\n            };\r\n            this.setValue(`${ this.latLng.lng },${ this.latLng.lat }`);\r\n            this.showMap();\r\n        } else {\r\n            let latLng = this.value.split(',');\r\n            if(isNaN(latLng[0] || latLng[1])) {\r\n                this.latLng = {\r\n                    lat: this.center[0],\r\n                    lng: this.center[1]\r\n                };\r\n            } else {\r\n                this.latLng = {\r\n                    lat: latLng[1],\r\n                    lng: latLng[0]\r\n                };\r\n            }\r\n            this.setValue(`${ this.latLng.lng },${ this.latLng.lat }`);\r\n        }\r\n    }\r\n    initSearchTools() {\r\n        const leaflet = window.L;\r\n        const searchTools = new leaflet.Control.Search({\r\n            url: this.url,\r\n            jsonParam: 'json_callback',\r\n            propertyName: 'display_name',\r\n            propertyLoc: ['lat', 'lon'],\r\n            textPlaceholder: this.placeholder,\r\n            //marker: leaflet.circleMarker([0, 0], {radius: 30}),\r\n            marker: false,\r\n            autoCollapse: true,\r\n            autoType: false,\r\n            minLength: 2,\r\n            tipAutoSubmit: true,\r\n            moveToLocation: param => {\r\n                //searchTools._input.style.display = 'block';\r\n                this.map.flyTo([param.lat, param.lng]);\r\n                this.renderRect([param.lat, param.lng]);\r\n            }\r\n        });\r\n        this.map.addControl(searchTools);\r\n        //searchTools._input.style.display = 'block';\r\n    }\r\n    setMarker(latLng) {\r\n        const leaflet = window.L;\r\n        if(this.marker) {\r\n            this.marker.remove();\r\n        }\r\n        this.marker = leaflet.marker(latLng).addTo(this.map);\r\n    }\r\n    renderRect(latLng) {\r\n        if(this.rect) {\r\n            this.rect.remove();\r\n        }\r\n        const leaflet = window.L;\r\n        let point = this.map.latLngToContainerPoint(latLng);\r\n        let start = leaflet.point(point.x - this.dx / 2, point.y - this.dy / 2);\r\n        let end = leaflet.point(point.x + this.dx / 2, point.y + this.dy / 2);\r\n        this.rect = leaflet.rectangle([this.map.containerPointToLatLng(start), this.map.containerPointToLatLng(end)]).addTo(this.map);\r\n        this.rect.enableEdit();\r\n    }\r\n    setValue(value) {\r\n        this.hidden.value = this.value = value;\r\n    }\r\n    handleClick(e) {\r\n        this.showMap();\r\n    }\r\n    show() {\r\n        if(this.dialog) {\r\n            //this.mask.style.display = 'block';\r\n            this.dialog.style.display = 'block';\r\n        }\r\n    }\r\n    hide() {\r\n        if(this.dialog) {\r\n            //this.mask.style.display = 'none';\r\n            this.dialog.style.display = 'none';\r\n        }\r\n    }\r\n    onChange() {}\r\n    showMap() {\r\n        if(!this.dialog) {\r\n            //this.mask = document.createElement('div');\r\n            //this.mask.className = `${ this.prix }-mapSelector-dialog-mask`;\r\n            //document.body.appendChild(this.mask);\r\n            this.dialog = document.createElement('div');\r\n            this.dialog.className = `${ this.prix }-mapSelector-dialog`;\r\n            this.dialog.innerHTML = `\r\n                <div class=\"${ this.prix }-mapSelector-dialog-inner\">\r\n                    <div class=\"${ this.prix }-mapSelector-dialog-header\">\r\n                        <div class=\"${ this.prix }-mapSelector-dialog-close\"></div>\r\n                    </div>\r\n                    <div class=\"${ this.prix }-mapSelector-dialog-center\">\r\n                        <div style=\"text-align: center;overflow: hidden;\">\r\n                            <div class=\"${ this.prix }-mapSelector-map\" style=\"width: 936px;height: 500px;margin: 0 auto;\"></div>\r\n                            <div style=\"line-height: 90px;\">\r\n                                <a class=\"${ this.prix }-mapSelector-submit\" href=\"javascript:;\" style=\"margin-right: 3px;background: #3399FF;border-radius: 2px;border: 1px solid #3399FF;color: #fff;padding: 6px 22px;\">确定</a>\r\n                                <a class=\"${ this.prix }-mapSelector-close\" href=\"javascript:;\" style=\"margin-left: 3px;border-radius: 2px;border: 1px solid #3399FF;color: #3399FF;padding: 6px 22px;\">取消</a>    \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"${ this.prix }-mapSelector-dialog-footer\"></div>\r\n                </div>\r\n            `;\r\n            document.body.appendChild(this.dialog);\r\n\r\n            // this.dialog = new Dldh.ui.Dialog(null, {\r\n            //     msg: `\r\n            //         <div style=\"width: 1000px;text-align: center;overflow: hidden;padding-top: 30px;\">\r\n            //             <div class=\"${ this.prix }-mapSelector-map\" style=\"width: 936px;height: 500px;margin: 0 auto;\"></div>\r\n            //             <div style=\"line-height: 90px;\">\r\n            //                 <a class=\"${ this.prix }-mapSelector-submit\" href=\"javascript:;\" style=\"margin-right: 3px;background: #3399FF;border-radius: 2px;border: 1px solid #3399FF;color: #fff;padding: 6px 22px;\">确定</a>\r\n            //                 <a class=\"${ this.prix }-mapSelector-close\" href=\"javascript:;\" style=\"margin-left: 3px;border-radius: 2px;border: 1px solid #3399FF;color: #3399FF;padding: 6px 22px;\">取消</a>    \r\n            //             </div>\r\n            //         </div>\r\n            //     `\r\n            // });\r\n            let inner = this.dialog.querySelector(`.${ this.prix }-mapSelector-dialog-inner`);\r\n            this.dialog.onclick = e => {\r\n                if(!inner.contains(e.target)) {\r\n                    this.hide();\r\n                }\r\n            }\r\n            this.dialog.querySelector(`.${ this.prix }-mapSelector-submit`).onclick = e => {\r\n                this.setValue(`${ this.latLng.lng },${ this.latLng.lat }`);\r\n                this.onChange(this.value);\r\n                this.hide();\r\n            }\r\n            this.dialog.querySelector(`.${ this.prix }-mapSelector-close`).onclick = e => {\r\n                this.hide();\r\n            }\r\n        }\r\n        this.show();\r\n        if(!this.map) {\r\n            const leaflet = window.L;\r\n            this.map = leaflet.map(this.dialog.querySelector(`.${ this.prix }-mapSelector-map`), {\r\n                //zoomControl: false,\r\n                //attributionControl: false,\r\n                editable: true\r\n            });\r\n            //let latLng = this.value.split(',');\r\n            //latLng = [latLng[1], latLng[0]];\r\n            this.map.setView(this.latLng, this.zoom);\r\n            leaflet.tileLayer('http://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=7&x={x}&y={y}&z={z}').addTo(this.map);\r\n            this.initSearchTools();\r\n            this.renderRect(this.latLng);\r\n            this.map.fitBounds(this.rect.getBounds());\r\n            this.setMarker(this.latLng);\r\n            this.map.on('moveend', e => {\r\n                this.updateLocal();\r\n            });\r\n            this.map.on('mouseup', e => {\r\n                this.updateLocal();\r\n            });\r\n        }\r\n    }\r\n    updateLocal() {\r\n        const leaflet = window.L;\r\n        let rect = this.rect.getBounds();\r\n        let northEast = rect._northEast;\r\n        let southWest = rect._southWest;\r\n        let nePoint = this.map.latLngToContainerPoint([northEast.lat, northEast.lng]);\r\n        let swPoint = this.map.latLngToContainerPoint([southWest.lat, southWest.lng]);\r\n        let centerPoint = leaflet.point(swPoint.x + (nePoint.x - swPoint.x) / 2, swPoint.y + (nePoint.y - swPoint.y) / 2);\r\n        this.latLng = this.map.containerPointToLatLng(centerPoint);\r\n        this.setMarker(this.latLng);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MapSelector from '@/components/Engine/core/MapSelector';\r\nimport './index.less';\r\n\r\nexport default class MEditor extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls',\r\n        onChange: () => {}\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let value = props.defaultValue || '';\r\n        if('value' in props) {\r\n            value = props.value || '';\r\n        }\r\n        this.state = {\r\n            value\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if(!this.mapSelector) {\r\n            this.mapSelector = new MapSelector({\r\n                el: this.dom,\r\n                onChange: this.handleChange\r\n            });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if('value' in nextProps) {\r\n            if(nextProps.value !== this.state.value) {\r\n                this.setState({\r\n                    value: nextProps.value\r\n                });\r\n            }\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let value = nextProps.defaultValue || '';\r\n        if('value' in nextProps) {\r\n            value = nextProps.value || '';\r\n        }\r\n        if(value === this.state.value) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    handleChange = (value) => {\r\n        //const value = this.editor.getValue();\r\n        if(this.props.onChange) {\r\n            this.props.onChange(value, { ...this.props, value });\r\n        }\r\n    }\r\n    setValue(v) {\r\n        //if(this.editor) {\r\n            //this.editor.setValue(v);\r\n        //}\r\n    }\r\n    render() {\r\n        const { sprefix, style } = this.props;\r\n        return (\r\n            <span className={ `${ sprefix }-map-select` }>\r\n                <span className={ `${ sprefix }-map-select-inner` } ref={ ref => this.dom = ref }></span>\r\n            </span>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Tabs,\r\n    Button\r\n} from 'antd';\r\nimport SiderMenu from './SiderMenu';\r\nimport MapPanel from './MapPanel';\r\nimport LineLayerPanel from './LineLayerPanel';\r\nimport BuildingLayerPanel from './BuildingLayerPanel';\r\nimport PolygonLayerPanel from './PolygonLayerPanel';\r\nimport LabelLayerPanel from './LabelLayerPanel';\r\nimport PointLayerPanel from './PointLayerPanel';\r\nimport ScanLayerPanel from './ScanLayerPanel';\r\n\r\nimport DataSourcePanel from './DataSourcePanel';\r\nimport MapSelector from '@/components/UI/MapSelector';\r\nimport './index.less';\r\n\r\nexport default class EditorPage extends Component {\r\n    static propTypes = {\r\n        sprefix: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'cls'\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.currentLayers = {};\r\n        this.state = {\r\n            treeData: [],\r\n            selectedKeys: [],\r\n            type: '',\r\n            editor: {\r\n                entities: {}\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.loaderMap();\r\n        \r\n    }\r\n    componentWillUnmount() {\r\n        if(this.view) {\r\n            this.view.destory();\r\n        }\r\n    }\r\n    loaderMap = async () => {\r\n        if(!this.view) {\r\n            let LayerClass = await import('@/components/Engine/core/View');\r\n            LayerClass = LayerClass.default;\r\n            this.view = new LayerClass({\r\n                el: this.dom\r\n            });\r\n            this.add('Map', {\r\n                url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'\r\n            });\r\n\r\nlet data = {\r\n    // \"Map\": {\r\n    //     url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'\r\n    // },\r\n    \"BuildingLayer\": {\r\n        \"height\": 100,\r\n        \"topImg\": \"\",\r\n        \"topColor\": '#4d7384',\r\n        \"topOpacity\": 1.0,\r\n        \"sideImg\": \"\",\r\n        \"sideColor\": '#66a3ee',\r\n        \"sideOpacity\": 1.0,\r\n        \"effect\": false,\r\n        \"dataSource\": \"data/building.json\"\r\n    },\r\n    \"LabelLayer\": {\r\n        \"fontColor\": \"#ffffff\",\r\n        \"fontSize\": 12,\r\n        \"color\": 'rgba(10,18,51,0.8)',\r\n        \"opacity\": 1.0,\r\n        \"lineColor\": '#ffffff',\r\n        \"dataSource\": \"data/point.json\"\r\n    },\r\n    \"PointLayer\": {\r\n        \"img\": \"images/point/1.png\",\r\n        \"color\": '#00ff00',\r\n        \"opacity\": 1.0,\r\n        \"size\": 300,\r\n        \"lineColor\": '#ffffff',\r\n        \"lineOpacity\": 1.0,\r\n        \"dataSource\": \"data/point.json\"\r\n    },\r\n    \"ScanLayer\": {\r\n        \"height\": 0,\r\n        \"color\": \"#FF9400\",\r\n        \"opacity\": 1.0,\r\n        \"speed\": 0.01,\r\n        \"dataSource\": \"data/point.json\"\r\n    },\r\n    \"LineLayer\": {\r\n        \"color\": \"#ffc627\",\r\n        \"img\": \"\",\r\n        \"opacity\": 1.0,\r\n        \"direction\": true,\r\n        \"effect\": true,\r\n        \"dataSource\": \"data/road.json\"\r\n    }\r\n}\r\nfor(let n in data) {\r\n    this.add(n, data[n]);\r\n}\r\n\r\n        }\r\n    }\r\n    deepCopy(rs, obj) {\r\n        for(let key in obj) {\r\n            //if(obj.hasOwnProperty(key)) {\r\n                if(Object.prototype.toString.call(obj[key]) === '[object Object]') {\r\n                    rs[key] = this.deepCopy({}, obj[key]);\r\n                } else if(Object.prototype.toString.call(obj[key]) === '[object Array]') {\r\n                    rs[key] = this.deepCopy([], obj[key]);\r\n                } else {\r\n                    rs[key] = obj[key];\r\n                }\r\n            //}\r\n        }\r\n        return rs;\r\n    }\r\n    // refresh() {\r\n    //     const { mapTile, mapSelector, color, opacity } = this.config.styledata;\r\n    //     const url = mapTile.split(';');\r\n    //     const lngLat = mapSelector.split(',');\r\n    //     this.view.setMap({\r\n    //         url: url[0] ? url[0] : 'http://{a,b,c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    //     });\r\n    //     if(this.lngLat[0] !== lngLat[0] || this.lngLat[1] !== lngLat[1]) {\r\n    //         this.lngLat = lngLat;\r\n    //         this.view.camera.flyTo({\r\n    //             lngLat: this.lngLat,\r\n    //             height: 1000\r\n    //         });\r\n    //     }\r\n    //     const _color = this.getColor(color);\r\n    //     _color[3] = opacity / 100;\r\n    //     this.view.setStyle({\r\n    //         color: _color\r\n    //     });\r\n    //     this.loadData();\r\n    // }\r\n    handleClickSiderMenu = (param) => {\r\n        this.add(param.name);\r\n    }\r\n    add(cType, config, noSelect) {\r\n        const type = cType;\r\n        const { treeData, editor } = this.state;\r\n        if(!config) {\r\n            import(`./${type}Panel/config`).then(rs => {\r\n                const data = treeData.slice();\r\n                let param = {\r\n                    key: new Date().getTime(),\r\n                    name: type,\r\n                    icon: SiderMenu.getIcon(type),\r\n                    title: SiderMenu.getTitle(type)\r\n                };\r\n                data.unshift(param);\r\n                config = this.deepCopy({}, rs.default);\r\n                config.resource_id = param.key;\r\n                config.__type = type;\r\n                param.data = config;\r\n                editor.entities[config.resource_id] = config;\r\n                this.setState({\r\n                    treeData: data\r\n                });\r\n                this.selectLayer(config.resource_id);\r\n                this.showPanel(type);\r\n                this.addLayer(type, config);\r\n            }); \r\n        } else {\r\n            const data = treeData.slice();\r\n            let key = new Date().getTime();\r\n            config.resource_id = key;\r\n            let param = {\r\n                key,\r\n                name: type,\r\n                icon: SiderMenu.getIcon(type),\r\n                title: SiderMenu.getTitle(type)\r\n            };\r\n            data.unshift(param);\r\n            param.data = config;\r\n            config.__type = type;\r\n            editor.entities[config.resource_id] = config;\r\n            this.setState({\r\n                treeData: data\r\n            });\r\n            if(!noSelect) {\r\n                this.selectLayer(config.resource_id);\r\n                this.showPanel(type);\r\n                this.addLayer(type, config);\r\n            }\r\n        }\r\n    }\r\n    select(param) {\r\n        if(param.length > 0) {\r\n            const { editor } = this.state;\r\n            for(let i = 0; i < param.length; i++) {\r\n                let config = editor.entities[param[i]];\r\n                this.selectLayer(config.resource_id);\r\n                this.showPanel(config.__type);\r\n            }\r\n        }\r\n    }\r\n    handleSelectSiderMenu = (param) => {\r\n        this.select(param);\r\n    }\r\n    showPanel(type) {\r\n        this.setState({\r\n            type\r\n        });\r\n    }\r\n    selectLayer(resource_id) {\r\n        this.setState({\r\n            selectedKeys: [resource_id],\r\n            config: this.state.editor.entities[resource_id]\r\n        });\r\n    }\r\n    addLayer(type, config) {\r\n        this.loadDataByLayer(type, config);\r\n    }\r\n    loadDataByLayer(type, config) {\r\n        this.loadDataSource(config, data => {\r\n            let { dataSource, ...style } = config;\r\n            if(type === 'Map') {\r\n                this.view.setMap(config);\r\n            } else {\r\n                let layer;\r\n                if(type === 'BuildingLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'BuildingLayer',\r\n                        style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                } else if(type === 'LineLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'LineLayer',\r\n                        //style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                } else if(type === 'PolygonLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'PolygonLayer',\r\n                        style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                } else if(type === 'LabelLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'LabelLayer',\r\n                        style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                } else if(type === 'PointLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'PointLayer',\r\n                        style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                } else if(type === 'ScanLayer') {\r\n                    layer = this.view.addLayer({\r\n                        type: 'ScanLayer',\r\n                        style\r\n                    });\r\n                    layer.setData(data);\r\n                    this.currentLayers[config.resource_id] = layer;\r\n                }\r\n                layer.setData(data);\r\n                this.currentLayers[config.resource_id] = layer;\r\n            }\r\n        });\r\n    }\r\n    handleClick = e => {\r\n        e.preventDefault();\r\n    }\r\n    handleButton = value => {\r\n        return e => {\r\n            e.preventDefault();\r\n            this.goToLonLat(value.split(','));\r\n        };\r\n    }\r\n    goToLonLat(lonLat) {\r\n        this.view.camera.flyTo({\r\n            lonLat,\r\n            height: 5500\r\n        });\r\n    }\r\n    handleSetStyle = (style, param, name) => {\r\n        const { selectedKeys, editor } = this.state;\r\n        let layer = editor.entities[selectedKeys[0]];\r\n        if(param === null || param === undefined) {\r\n            layer[name] = style;\r\n        } else {\r\n            if(style === null || style === undefined) {\r\n                layer[name] = param.value;\r\n            } else {\r\n                layer[name] = style;\r\n            }\r\n        }\r\n        this.setState({\r\n            config: layer\r\n        });\r\n        this.currentLayers[layer.resource_id].setStyle(layer);\r\n    }\r\n    handleSetMap = item => {\r\n        const { selectedKeys, editor } = this.state;\r\n        let layer = editor.entities[selectedKeys[0]];\r\n        layer.url = item.url;\r\n        layer.color = item.color;\r\n        this.setState({\r\n            config: item\r\n        });\r\n        this.view.setMap(item);\r\n    }\r\n    handlePublish = e => {\r\n        //Publish();\r\n    }\r\n    handleSetDataSource = e => {\r\n        const { config } = this.state;\r\n        if(this.currentLayers[config.resource_id] && this.currentLayers[config.resource_id].setData) {\r\n            if(typeof e === 'string') {\r\n                config.dataSource = JSON.parse(e);\r\n            } else {\r\n                config.dataSource = e;\r\n            }\r\n            this.currentLayers[config.resource_id].setData(config.dataSource);\r\n        }\r\n    }\r\n    loadDataSource(layer, callback) {\r\n        if(typeof layer.dataSource === 'string') {\r\n            fetch(layer.dataSource, {\r\n                cors: true\r\n            }).then(rs => {\r\n                return rs.json();\r\n            }).then(rs => {\r\n                if(callback) {\r\n                    callback(rs);\r\n                }\r\n            });\r\n        } else {\r\n            if(callback) {\r\n                callback(layer.dataSource);\r\n            }\r\n        }\r\n    }\r\n    handleTabChange = e => {\r\n\r\n    }\r\n    renderSettingPanel() {\r\n        const { sprefix } = this.props;\r\n        const { selectedKeys, type, config } = this.state;\r\n        let stylePanel;\r\n        if(selectedKeys.length < 1) {\r\n            return null;\r\n        } else if(type === 'Map') {\r\n            return (\r\n                <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                    <MapPanel config={config} onChange={this.handleSetMap}/>\r\n                </div>\r\n            );\r\n        } else if(selectedKeys.length === 1) {\r\n            if(type === 'LineLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <LineLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            } else if(type === 'BuildingLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <BuildingLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            } else if(type === 'PolygonLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <PolygonLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            } else if(type === 'LabelLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <LabelLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            } else if(type === 'PointLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <PointLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            } else if(type === 'ScanLayer') {\r\n                stylePanel = (\r\n                    <div className={ `${ sprefix }-editor-layout-scrollable` }>\r\n                        <ScanLayerPanel config={config} onChange={this.handleSetStyle}/>\r\n                    </div>\r\n                );\r\n            }\r\n        } else if(selectedKeys.length > 1) {\r\n\r\n        }\r\n        return (\r\n            <Tabs onChange={ this.handleTabChange } type=\"card\">\r\n                <Tabs.TabPane tab=\"样式\" key=\"0\">\r\n                    { stylePanel }\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane tab=\"数据\" key=\"1\">\r\n                    <DataSourcePanel value={ config.dataSource } onChange={ this.handleSetDataSource } />\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        );\r\n    }\r\n    handleDel = selectedKeys => {\r\n        if(selectedKeys) {\r\n            let { treeData, editor } = this.state;\r\n            let data = treeData.slice();\r\n            let sd = [];\r\n            for(let i = 0; i < selectedKeys.length; i++) {\r\n                if(editor.entities[selectedKeys[i]].__type === 'Map') {\r\n                    return;\r\n                }\r\n                this.currentLayers[selectedKeys[i]].clear();\r\n                delete this.currentLayers[selectedKeys[i]];\r\n                for(let j = 0; j < data.length; j++) {\r\n                    if(data[j].key === selectedKeys[i]) {\r\n                        data.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n            if(data.length > 0) {\r\n                sd.push(data[0].key);\r\n            }\r\n            this.select(sd);\r\n            this.setState({\r\n                treeData: data,\r\n                selectedKeys: sd\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const { sprefix } = this.props;\r\n        return (\r\n            <div className={ `${ sprefix }-editor-layout-main` }>\r\n                <div className={ `${ sprefix }-editor-layout-header` }>\r\n                    <div className={ `${ sprefix }-editor-layout-header-inner` }>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={ `${ sprefix }-editor-layout-left` }>\r\n                    <SiderMenu\r\n                        data={this.state.treeData}\r\n                        selectedKeys={this.state.selectedKeys}\r\n                        onChange={this.handleClickSiderMenu}\r\n                        onSelect={this.handleSelectSiderMenu}\r\n                        onDel={this.handleDel}\r\n                    />\r\n                </div>\r\n                <div className={ `${ sprefix }-editor-layout-center` }>\r\n                    <div style={{ position: 'absolute', right: '5px',top: '5px', zIndex: '10'}}>\r\n                        <Button>\r\n                            <MapSelector\r\n                                onChange={ \r\n                                    (value) => {\r\n                                        this.goToLonLat(value.split(','));\r\n                                    } \r\n                                }\r\n                            />\r\n                        </Button>\r\n                        <Button onClick={this.handleButton(\"113.924008,22.496991\")}>深圳</Button>\r\n                        <Button onClick={this.handleButton(\"116.3970512151718,39.90549780269116\")}>北京</Button>\r\n                        <Button onClick={this.handleButton(\"120.20000,30.26667\")}>杭州</Button>\r\n                        <Button onClick={this.handleButton(\"-95.712891,37.09024\")}>美国</Button>\r\n                        <Button onClick={this.handleButton(\"-3.435973,55.378051\")}>英国</Button>\r\n                    </div>\r\n                    <div className={  `${ sprefix }-globe` }>\r\n                        <div style={{\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            top: 0,\r\n                            zIndex: 10\r\n                        }}>\r\n                        </div>\r\n                        <div className={  `${ sprefix }-globe-inner` } ref={(ref) => this.dom = ref} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={ `${ sprefix }-editor-layout-right` }>\r\n                    {this.renderSettingPanel()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.less';\r\n\r\nexport default class UploadImage extends Component {\r\n    static propTypes = {\r\n        placeholder: PropTypes.string,\r\n        name: PropTypes.string,\r\n        disabled: PropTypes.bool\r\n    };\r\n    static defaultProps = {\r\n        sprefix: 'dwrui',\r\n        placeholder: 'Input...',\r\n        fileTitle: '点击或拖拽图片',\r\n        url: '',\r\n        basePath: '',\r\n        name: '',\r\n        disabled: false\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        let value = props.value || props.defaultValue;\r\n        this.state = {\r\n            value,\r\n            imageUrl: value\r\n        };\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if ('value' in nextProps) {\r\n            const { value } = nextProps;\r\n            if (value !== this.state.value) {\r\n                this.setState({\r\n                    value,\r\n                    imageUrl: value\r\n                });\r\n            }\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n    onChange(value, e) {\r\n        if(!('value' in this.props)) {\r\n            this.setState({\r\n                value,\r\n                imageUrl: value\r\n            });\r\n        }\r\n        if (this.props.onChange) {\r\n            this.props.onChange(value, { ...this.props, value });\r\n        }\r\n    }\r\n    handleChange = e => {\r\n        e.preventDefault();\r\n        this.handleUploadFiles(e.target.files);\r\n    }\r\n    handleUploadFiles = function(files) {\r\n        const ps = [];\r\n        for(let i = 0; i < files.length; i++) {\r\n            ps.push(this.handleUploadFile(files[i]));\r\n        }\r\n        return Promise.all(ps).then(data => data);\r\n    }\r\n    handleUploadFile(file) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = e => {\r\n            this.onChange(e.target.result);\r\n        }\r\n    }\r\n    // handleUploadFile(file) {\r\n    //     let formData = new FormData();\r\n    //     formData.append('file', file);\r\n    //     if(this.props.onUpload) {\r\n    //         this.props.onUpload(formData, file);\r\n    //     } else {\r\n    //         fetch(this.props.url, {\r\n    //             method: 'post',\r\n    //             // headers: {\r\n    //             //     contentType: 'application/x-www-form-urlencoded'\r\n    //             // },\r\n    //             //headers: {},\r\n    //             //processData: false,\r\n    //             //cache: false,\r\n    //             body: formData\r\n    //         }).then(response => response.json()).then(rs => {\r\n    //             const value = this.getImageURL(rs.data);\r\n    //             this.onChange(value);\r\n    //         });\r\n    //     }\r\n    //     // return ajax({\r\n    //     //     url: ``,\r\n    //     //     type: 'post',\r\n    //     //     data: formData,\r\n    //     //     contentType: false,\r\n    //     //     processData: false,\r\n    //     //     cache: false,\r\n    //     // }).then(data => data);\r\n    // }\r\n    getImageURL(value) {\r\n        if(value !== undefined) {\r\n            return `${ this.props.basePath }/${ value }`;\r\n        }\r\n        return '';\r\n    }\r\n    handleInputChange = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            imageUrl: e.target.value\r\n        });\r\n    }\r\n    handleInputKeyPress = e => {\r\n        if (e.nativeEvent.which === 13) {\r\n            e.target.blur();\r\n        }\r\n    }\r\n    handleInputBlur = e => {\r\n        e.preventDefault();\r\n        const { imageUrl } = this.state;\r\n        this.onChange(imageUrl);\r\n    }\r\n    handleClick = e => {\r\n        e.preventDefault();\r\n        this.onChange('');\r\n        this.fileInput.value = '';\r\n    }\r\n    render() {\r\n        const { sprefix, theme, fileTitle, placeholder, name, disabled } = this.props;\r\n        const cls = [`${sprefix}-image-wrap`];\r\n        if(theme === 'dark') {\r\n            cls.push(`${sprefix}-image-wrap-dark`);\r\n        }\r\n        return (\r\n            <div className={ cls.join(' ') }>\r\n                <div className={ `${ sprefix }-image-url-wrap` }>\r\n                    <i className={ `${ sprefix }-image-url-icon` }>\r\n                        <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"link\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                            <path d=\"M574 665.4a8.03 8.03 0 00-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8a8.03 8.03 0 00-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zm258.6-474c-84.6-84.6-221.5-84.6-306 0L410.3 307.6a8.03 8.03 0 000 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6a8.03 8.03 0 000 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1zM610.1 372.3a8.03 8.03 0 00-11.3 0L372.3 598.7a8.03 8.03 0 000 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z\"></path>\r\n                        </svg>\r\n                    </i>\r\n                    <input \r\n                        className={ `${ sprefix }-image-url` }\r\n                        placeholder={ placeholder }\r\n                        disabled={ disabled }\r\n                        value={ this.state.imageUrl || '' }\r\n                        onKeyPress={ this.handleInputKeyPress }\r\n                        onBlur={ this.handleInputBlur }\r\n                        onChange={ this.handleInputChange }\r\n                    />\r\n                </div>\r\n                <div className={ `${ sprefix }-image-add` }>\r\n                    {/* <input className={ `${ sprefix }-image-hidden` } name={ name } type=\"hidden\" value={ this.state.value }/> */}\r\n                    <span className={ `${ sprefix }-image-label` }>{ fileTitle }</span>\r\n                    <div className={ `${ sprefix }-image-img` } style={{ backgroundImage: `url(${ this.state.value })` }}></div>\r\n                    <input ref={ ref => this.fileInput = ref } type=\"file\" className={ `${ sprefix }-image-input` } accept=\"image/*\" onChange={ this.handleChange } disabled={ disabled }/>\r\n                    <div className={ `${ sprefix }-image-oper` }>\r\n                        <span className={ `${ sprefix }-image-edit` } style={{ display: 'none' }}>✎</span>\r\n                        <span className={ `${ sprefix }-image-delete` } onClick={ this.handleClick }>✖</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","var map = {\n\t\"./BuildingLayerPanel/config\": [\n\t\t269,\n\t\t9,\n\t\t14\n\t],\n\t\"./DataSourcePanel/config\": [\n\t\t270,\n\t\t7,\n\t\t15\n\t],\n\t\"./LabelLayerPanel/config\": [\n\t\t271,\n\t\t9,\n\t\t16\n\t],\n\t\"./LineLayerPanel/config\": [\n\t\t272,\n\t\t9,\n\t\t17\n\t],\n\t\"./MapPanel/config\": [\n\t\t273,\n\t\t9,\n\t\t18\n\t],\n\t\"./PointLayerPanel/config\": [\n\t\t274,\n\t\t9,\n\t\t19\n\t],\n\t\"./PolygonLayerPanel/config\": [\n\t\t275,\n\t\t9,\n\t\t20\n\t],\n\t\"./ScanLayerPanel/config\": [\n\t\t276,\n\t\t9,\n\t\t21\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 740;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}